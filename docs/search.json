[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "uiju-blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 6, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 3, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nimport numpy as np\n\na = np.arange(10)\na\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\nimport numpy as np\nimport pandas as pd\n\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\npenguins.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n\n\n\n1. NaN 값 확인 및 제거\n\npenguins.isna().sum() # NaN 값이 어디에 있는지 확인\n\nspecies               0\nisland                0\nbill_length_mm        2\nbill_depth_mm         2\nflipper_length_mm     2\nbody_mass_g           2\nsex                  11\nyear                  0\ndtype: int64\n\n\n각 항목별 NaN값이 있는 것을 확인하였습니다. 원할한 분석을 위해 NaN을 0과 X로 수정하였습니다\n\npenguins.loc[penguins[\"bill_length_mm\"].isna(), \"bill_length_mm\"] = 0\npenguins.loc[penguins[\"bill_depth_mm\"].isna(), \"bill_depth_mm\"] = 0\npenguins.loc[penguins[\"flipper_length_mm\"].isna(), \"flipper_length_mm\"] = 0\npenguins.loc[penguins[\"body_mass_g\"].isna(), \"body_mass_g\"] = 0\npenguins.loc[penguins[\"sex\"].isna(), \"sex\"] = \"X\"\n\n\npenguins.isna().sum() # NaN 값 수정 확인\n\nspecies              0\nisland               0\nbill_length_mm       0\nbill_depth_mm        0\nflipper_length_mm    0\nbody_mass_g          0\nsex                  0\nyear                 0\ndtype: int64\n\n\n\n\n1. 각 종별 펭귄수 구하기\n\nspecies_counts = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_counts[species] = penguins.loc[penguins[\"species\"] == species, \"species\"].shape[0]\n\n\n결과 값\n\nspecies_df = pd.DataFrame(list(species_counts.items()), columns=[\"species\", \"count\"])\nprint(species_df)\n\n     species  count\n0     Adelie    152\n1     Gentoo    124\n2  Chinstrap     68\n\n\n\n\n해당 결과를 통해 Adelie(152), Gentoo(124), Chinstrap(68) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-1. 각 섬별 펭귄수 구하기\n\nisland_list = [\"Biscoe\", \"Dream\", \"Torgersen\"]\nisland_counts = {}\n\nfor island in island_list:\n    island_counts[island] = penguins.loc[penguins[\"island\"] == island, \"island\"].shape[0]\n\n\n결과 값\n\nprint(island_counts)\n\n{'Biscoe': 168, 'Dream': 124, 'Torgersen': 52}\n\n\n\n\n해당 결과를 통해 Biscoe(168), Dream(124), Torgersen(52) 순으로 펭귄이 많은 것을 알 수 있습니다.\n\n\n\n2-2. 각 섬별 펭귄 종류 구하기\n\nisland_species_counts = {}\n\nfor island in penguins[\"island\"].unique():  \n    island_species_counts[island] = {}\n\n    # 각 종별 반복\n    for species in penguins[\"species\"].unique():  \n        count = penguins.loc[(penguins[\"island\"] == island) & (penguins[\"species\"] == species), \"species\"].shape[0]\n        island_species_counts[island][species] = count\n\n\nprint(island_species_counts)\n\n{'Torgersen': {'Adelie': 52, 'Gentoo': 0, 'Chinstrap': 0}, 'Biscoe': {'Adelie': 44, 'Gentoo': 124, 'Chinstrap': 0}, 'Dream': {'Adelie': 56, 'Gentoo': 0, 'Chinstrap': 68}}\n\n\n\nAdelie는 모든 지역(Torgersen(52), Biscoe(44), Dream(52))에 서식하고 있어 서식지가 분포되어 있는 것을 알 수 있습니다.\n\n\nGentoo와 Chinstrap은 각 Biscoe와 Dream에만 서식하는 것을 알 수 있습니다.\n\nbill_length_max = penguins[\"bill_length_mm\"].max()\nbill_length_min = penguins.loc[penguins[\"bill_length_mm\"] &gt; 0, \"bill_length_mm\"].min()\nbill_length_mean = penguins[\"bill_length_mm\"].mean() \n\n\n\n결과 값\n\nprint(bill_length_max, bill_length_min, bill_length_mean)\n\n59.6 32.1 43.66656976744186\n\n\n\n\n해당 결과를 통해 전체 펭귄 부리의 최대값(59.6), 최소값(32.1), 평균값(43.6)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 부리 길이 구하기\n\nspecies_bill_length = {}\n\nfor species in penguins[\"species\"].unique(): \n    species_bill_length[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"bill_length_mm\"] &gt; 0), \"bill_length_mm\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"bill_length_mm\"].mean()\n    }\n\n\nprint(species_bill_length)\n\n{'Adelie': {'max': 46.0, 'min': 32.1, 'mean': np.float64(38.536184210526315)}, 'Gentoo': {'max': 59.6, 'min': 40.9, 'mean': np.float64(47.12177419354838)}, 'Chinstrap': {'max': 58.0, 'min': 40.9, 'mean': np.float64(48.83382352941177)}}\n\n\n\n각 종의 부리 길이 평균값을 기준으로 부리가 가장 긴 종을 다음과 같이 구했습니다.\n\n\nChinstrap(48.8) &gt; Gentoo(47.1) &gt; Adelie(38.5)\n\n\n\n4-1. 몸무게 구하기\n\nbody_mass_max = penguins[\"body_mass_g\"].max()\nbody_mass_min = penguins.loc[penguins[\"body_mass_g\"] &gt; 0, \"body_mass_g\"].min()\nbody_mass_mean = penguins[\"body_mass_g\"].mean()\n\n\n결과 값\n\nprint(body_mass_max, body_mass_min, body_mass_mean)\n\n6300.0 2700.0 4177.325581395349\n\n\n\n\n해당 결과를 통해 전체 펭귄 몸무게게 최대값(6300), 최소값(2700), 평균값(4177)을 알 수 있습니다.\n\n\n\n3-2. 펭귄별 몸무게 구하기\n\nspecies_bill_length = {}\n\nspecies_body_mass = {}\n\nfor species in penguins[\"species\"].unique():  # 각 종별 반복\n    species_body_mass[species] = {\n        \"max\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].max(),\n        \"min\": penguins.loc[(penguins[\"species\"] == species) & (penguins[\"body_mass_g\"] &gt; 0), \"body_mass_g\"].min(),\n        \"mean\": penguins.loc[penguins[\"species\"] == species, \"body_mass_g\"].mean()\n    }\n\n\nprint(species_body_mass)\n\n{'Adelie': {'max': 4775.0, 'min': 2850.0, 'mean': np.float64(3676.315789473684)}, 'Gentoo': {'max': 6300.0, 'min': 3950.0, 'mean': np.float64(5035.080645161291)}, 'Chinstrap': {'max': 4800.0, 'min': 2700.0, 'mean': np.float64(3733.0882352941176)}}\n\n\n\n각 종의 몸무게 평균값을 기준으로 무게가 가장 무거운 종을 다음과 같이 구했습니다.\n\n\nGentoo(5076) &gt; Chinstrap(3733) &gt; Adelie(3700)\n\n\n\n총정리\nAdelie: 부리 길이 짧음, 부리 깊이 보통, 날개 길이 짧음, 몸무게 가벼움 Chinstrap: 부리 길이 가장 김, 부리 깊이 보통, 날개 길이 중간, 몸무게 중간 Gentoo: 부리 길이 김, 부리 깊이 가장 얇음, 날개 길이 가장 긺, 몸무게 가장 무거움\n\n이번 분석은 가중치 없이 단순히 각 항목의 평균값을 비교하여 판단했습니다.\n\n\n추후 전체 값과 종별 특성을 비교하는 값을 작성할 예정입니다."
  }
]